{"version":3,"file":"configuration.js","sourceRoot":"","sources":["../../src/configuration.ts"],"names":[],"mappings":";;;AAqDA;;GAEG;AACH,SAAgB,YAAY,CAC1B,IAAkD;IAElD,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACtC,CAAC;AAJD,oCAIC;AAsID,YAAY","sourcesContent":["/**\n * ```ts\n * import type { ConfigOptions } from \"arangojs/configuration\";\n * ```\n *\n * The \"configuration\" module provides configuration related types for\n * TypeScript.\n *\n * @packageDocumentation\n */\nimport * as connection from \"./connection.js\";\n\n//#region Shared types\n/**\n * Determines the behavior when multiple URLs are used:\n *\n * - `\"NONE\"`: No load balancing. All requests will be handled by the first\n *   URL in the list until a network error is encountered. On network error,\n *   arangojs will advance to using the next URL in the list.\n *\n * - `\"ONE_RANDOM\"`: Randomly picks one URL from the list initially, then\n *   behaves like `\"NONE\"`.\n *\n * - `\"ROUND_ROBIN\"`: Every sequential request uses the next URL in the list.\n */\nexport type LoadBalancingStrategy = \"NONE\" | \"ROUND_ROBIN\" | \"ONE_RANDOM\";\n//#endregion\n\n//#region Credentials\n/**\n * Credentials for HTTP Basic authentication.\n */\nexport type BasicAuthCredentials = {\n  /**\n   * Username to use for authentication, e.g. `\"root\"`.\n   */\n  username: string;\n  /**\n   * Password to use for authentication. Defaults to an empty string.\n   */\n  password?: string;\n};\n\n/**\n * Credentials for HTTP Bearer token authentication.\n */\nexport type BearerAuthCredentials = {\n  /**\n   * Bearer token to use for authentication.\n   */\n  token: string;\n};\n\n/**\n * Determines if the given credentials are for Bearer token authentication.\n */\nexport function isBearerAuth(\n  auth: BasicAuthCredentials | BearerAuthCredentials,\n): auth is BearerAuthCredentials {\n  return auth.hasOwnProperty(\"token\");\n}\n//#endregion\n\n//#region Config\n/**\n * Options for configuring arangojs.\n */\nexport type ConfigOptions = connection.CommonRequestOptions & {\n  /**\n   * Name of the database to use.\n   *\n   * Default: `\"_system\"`\n   */\n  databaseName?: string;\n  /**\n   * Base URL of the ArangoDB server or list of server URLs.\n   *\n   * When working with a cluster, the method {@link databases.Database#acquireHostList}\n   * can be used to automatically pick up additional coordinators/followers at\n   * any point.\n   *\n   * When running ArangoDB on a unix socket, e.g. `/tmp/arangodb.sock`, the\n   * following URL formats are supported for unix sockets:\n   *\n   * - `unix:///tmp/arangodb.sock` (no SSL)\n   * - `http+unix:///tmp/arangodb.sock` (or `https+unix://` for SSL)\n   * - `http://unix:/tmp/arangodb.sock` (or `https://unix:` for SSL)\n   *\n   * Additionally `ssl` and `tls` are treated as synonymous with `https` and\n   * `tcp` is treated as synonymous with `http`, so the following URLs are\n   * considered identical:\n   *\n   * - `tcp://127.0.0.1:8529` and `http://127.0.0.1:8529`\n   * - `ssl://127.0.0.1:8529` and `https://127.0.0.1:8529`\n   * - `tcp+unix:///tmp/arangodb.sock` and `http+unix:///tmp/arangodb.sock`\n   * - `ssl+unix:///tmp/arangodb.sock` and `https+unix:///tmp/arangodb.sock`\n   * - `tcp://unix:/tmp/arangodb.sock` and `http://unix:/tmp/arangodb.sock`\n   * - `ssl://unix:/tmp/arangodb.sock` and `https://unix:/tmp/arangodb.sock`\n   *\n   * See also `auth` for passing authentication credentials.\n   *\n   * Default: `\"http://127.0.0.1:8529\"`\n   */\n  url?: string | string[];\n  /**\n   * Credentials to use for authentication.\n   *\n   * See also {@link databases.Database#useBasicAuth} and\n   * {@link databases.Database#useBearerAuth}.\n   *\n   * Default: `{ username: \"root\", password: \"\" }`\n   */\n  auth?: BasicAuthCredentials | BearerAuthCredentials;\n  /**\n   * Numeric representation of the ArangoDB version the driver should expect.\n   * The format is defined as `XYYZZ` where `X` is the major version, `Y` is\n   * the zero-filled two-digit minor version and `Z` is the zero-filled two-digit\n   * bugfix version, e.g. `30102` for 3.1.2, `20811` for 2.8.11.\n   *\n   * Depending on this value certain methods may become unavailable or change\n   * their behavior to remain compatible with different versions of ArangoDB.\n   *\n   * Default: `31100`\n   */\n  arangoVersion?: number;\n  /**\n   * Determines the behavior when multiple URLs are provided:\n   *\n   * - `\"NONE\"`: No load balancing. All requests will be handled by the first\n   *   URL in the list until a network error is encountered. On network error,\n   *   arangojs will advance to using the next URL in the list.\n   *\n   * - `\"ONE_RANDOM\"`: Randomly picks one URL from the list initially, then\n   *   behaves like `\"NONE\"`.\n   *\n   * - `\"ROUND_ROBIN\"`: Every sequential request uses the next URL in the list.\n   *\n   * Default: `\"NONE\"`\n   */\n  loadBalancingStrategy?: LoadBalancingStrategy;\n  /**\n   * Maximum number of parallel requests arangojs will perform. If any\n   * additional requests are attempted, they will be enqueued until one of the\n   * active requests has completed.\n   *\n   * **Note:** when using `ROUND_ROBIN` load balancing and passing an array of\n   * URLs in the `url` option, the default value of this option will be set to\n   * `3 * url.length` instead of `3`.\n   *\n   * Default: `3`\n   */\n  poolSize?: number;\n  /**\n   * Default options to pass to the `fetch` function when making requests.\n   *\n   * See [the Fetch API specification](https://fetch.spec.whatwg.org/#request-class)\n   * or the [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/API/RequestInit)\n   * for more information on the available options.\n   */\n  fetchOptions?: connection.CommonFetchOptions;\n  /**\n   * If set, arangojs will use the [`undici`](https://www.npmjs.com/package/undici)\n   * package to make requests and the provided options will be used to create\n   * the `undici` agent.\n   *\n   * See [the `undici` documentation](https://undici.nodejs.org/#/docs/api/Agent?id=parameter-agentoptions)\n   * for more information on the available options.\n   */\n  agentOptions?: any;\n  /**\n   * Callback that will be invoked when a request\n   *\n   * @param err - Error encountered when handling this request.\n   */\n  onError?: (err: Error) => void | Promise<void>;\n  /**\n   * If set to `true`, arangojs will generate stack traces every time a request\n   * is initiated and augment the stack traces of any errors it generates.\n   *\n   * **Warning**: This will cause arangojs to generate stack traces in advance\n   * even if the request does not result in an error. Generating stack traces\n   * may negatively impact performance.\n   */\n  precaptureStackTraces?: boolean;\n  /**\n   * Limits the number of values of server-reported response queue times that\n   * will be stored and accessible using {@link databases.Database#queueTime}. If set to\n   * a finite value, older values will be discarded to make room for new values\n   * when that limit is reached.\n   *\n   * Default: `10`\n   */\n  responseQueueTimeSamples?: number;\n};\n//#endregion\n"]}