{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../src/lib/util.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,MAAM,cAAc,GAAG,EAAE,GAAG,MAAM,CAAC;AAEnC;;;;GAIG;AACH,MAAM,UAAU,QAAQ,CAAC,GAAG,QAAgC;IAC1D,IAAI,CAAC,QAAQ,CAAC,MAAM;QAAE,OAAO,EAAE,CAAC;IAChC,OAAO,QAAQ;SACZ,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;QACnB,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC;gBAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3B,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,KAAK,CAAC;YAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;QAC/C,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC;SACD,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,YAAY,CAC1B,GAAG,WAKA;IAEH,IAAI,CAAC,WAAW,CAAC,MAAM;QAAE,OAAO,IAAI,OAAO,EAAE,CAAC;IAC9C,OAAO,IAAI,OAAO,CAAC;QACjB,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACjC,OAAO;YACL,CAAC,CAAC;gBACE,GAAG,CAAC,OAAO,YAAY,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;oBACtD,CAAC,CAAC,OAAO;oBACT,CAAC,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;aAC1B;YACH,CAAC,CAAC,EAAE,CACP;KACF,CAAC,CAAC;AACL,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,YAAY,CAAC,GAAW;IACtC,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;IACpD,IAAI,GAAG;QAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;IAC9D,IAAI,IAAI;QAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,WAAW,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;SACpD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC;QAAE,GAAG,IAAI,GAAG,CAAC;IACxC,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,iBAAiB;IAC/B,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,cAAc,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;AACzF,CAAC;AAED;;;;;;;;;;GAUG;AACH,MAAM,UAAU,WAAW,CAAC,OAAe,EAAE,QAAoB;IAC/D,MAAM,CAAC,GAAG,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACxC,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,kBAAkB;IAChC,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACf,IAAI,CAAC;YACH,MAAM,GAAG,CAAC;QACZ,CAAC;QAAC,OAAO,CAAM,EAAE,CAAC;YAChB,GAAG,GAAG,CAAC,CAAC;QACV,CAAC;IACH,CAAC;IACD,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["/**\n * Utility functions for arangojs.\n *\n * @packageDocumentation\n * @internal\n */\n\nconst THIRTY_MINUTES = 30 * 60_000;\n\n/**\n * @internal\n *\n * Helper to merge path segments.\n */\nexport function joinPath(...pathList: (string | undefined)[]): string {\n  if (!pathList.length) return \"\";\n  return pathList\n    .flatMap((path, i) => {\n      if (!path) return [];\n      if (i === pathList.length - 1) {\n        if (i === 0) return [path];\n        return [path.replace(/^\\/+/, \"\")];\n      }\n      if (i === 0) return [path.replace(/\\/+$/, \"\")];\n      return [path.replace(/^\\/+|\\/+$/, \"\")];\n    })\n    .join(\"/\");\n}\n\n/**\n * @internal\n *\n * Utility function for merging headers.\n */\nexport function mergeHeaders(\n  ...headersList: (\n    | Headers\n    | string[][]\n    | Record<string, string | ReadonlyArray<string>>\n    | undefined\n  )[]\n) {\n  if (!headersList.length) return new Headers();\n  return new Headers([\n    ...headersList.flatMap((headers) =>\n      headers\n        ? [\n            ...(headers instanceof Headers || Array.isArray(headers)\n              ? headers\n              : new Headers(headers)),\n          ]\n        : [],\n    ),\n  ]);\n}\n\n/**\n * @internal\n *\n * Utility function for normalizing URLs.\n */\nexport function normalizeUrl(url: string): string {\n  const raw = url.match(/^(tcp|ssl|tls)((?::|\\+).+)/);\n  if (raw) url = (raw[1] === \"tcp\" ? \"http\" : \"https\") + raw[2];\n  const unix = url.match(/^(?:(http|https)\\+)?unix:\\/\\/(\\/.+)/);\n  if (unix) url = `${unix[1] || \"http\"}://unix:${unix[2]}`;\n  else if (!url.endsWith(\"/\")) url += \"/\";\n  return url;\n}\n\n/**\n * @internal\n *\n * Generate a unique request ID.\n */\nexport function generateRequestId() {\n  return `${Date.now() % THIRTY_MINUTES}_${Math.random().toString(36).substring(2, 15)}`;\n}\n\n/**\n * @internal\n *\n * Creates a timer that will call the given callback after the specified\n * timeout.\n *\n * @param timeout - Number of milliseconds after which the callback will be\n *   called.\n * @param callback - Callback to call after the timeout.\n * @returns A function that clears the timer.\n */\nexport function createTimer(timeout: number, callback: () => void) {\n  const t = setTimeout(callback, timeout);\n  return () => clearTimeout(t);\n}\n\n/**\n * @internal\n *\n * Generates a stack trace.\n */\nexport function generateStackTrace() {\n  let err = new Error();\n  if (!err.stack) {\n    try {\n      throw err;\n    } catch (e: any) {\n      err = e;\n    }\n  }\n  return err;\n}\n"]}