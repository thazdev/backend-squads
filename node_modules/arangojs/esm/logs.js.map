{"version":3,"file":"logs.js","sourceRoot":"","sources":["../../src/logs.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAEH,sBAAsB;AACtB;;GAEG;AACH,MAAM,CAAN,IAAY,QAMX;AAND,WAAY,QAAQ;IAClB,yCAAK,CAAA;IACL,yCAAK,CAAA;IACL,6CAAO,CAAA;IACP,uCAAI,CAAA;IACJ,yCAAK,CAAA;AACP,CAAC,EANW,QAAQ,KAAR,QAAQ,QAMnB;AAmFD,YAAY","sourcesContent":["/**\n * ```ts\n * import type { LogLevel } from \"arangojs/logs\";\n * ```\n *\n * The \"logs\" module provides types for ArangoDB logs.\n *\n * @packageDocumentation\n */\n\n//#region Shared types\n/**\n * Numeric representation of the logging level of a log entry.\n */\nexport enum LogLevel {\n  FATAL,\n  ERROR,\n  WARNING,\n  INFO,\n  DEBUG,\n}\n\n/**\n * String representation of the logging level of a log entry.\n */\nexport type LogLevelLabel = keyof typeof LogLevel;\n\n/**\n * Logging level setting.\n */\nexport type LogLevelSetting = LogLevelLabel | \"DEFAULT\";\n\n/**\n * Log sorting direction, ascending or descending.\n */\nexport type LogSortDirection = \"asc\" | \"desc\";\n//#endregion\n\n//#region Log operation options\n/**\n * Options for retrieving log entries.\n */\nexport type LogEntriesOptions = {\n  /**\n   * Maximum log level of the entries to retrieve.\n   *\n   * Default: `INFO`.\n   */\n  upto?: LogLevel | LogLevelLabel | Lowercase<LogLevelLabel>;\n  /**\n   * If set, only log entries with this log level will be returned.\n   */\n  level?: LogLevel | LogLevelLabel | Lowercase<LogLevelLabel>;\n  /**\n   * If set, only log entries with an `lid` greater than or equal to this value\n   * will be returned.\n   */\n  start?: number;\n  /**\n   * If set, only this many entries will be returned.\n   */\n  size?: number;\n  /**\n   * If set, this many log entries will be skipped.\n   */\n  offset?: number;\n  /**\n   * If set, only log entries containing the specified text will be returned.\n   */\n  search?: string;\n  /**\n   * If set to `\"desc\"`, log entries will be returned in reverse chronological\n   * order.\n   *\n   * Default: `\"asc\"`.\n   */\n  sort?: LogSortDirection;\n};\n//#endregion\n\n//#region Log operation results\n/**\n * An object representing a single log entry.\n */\nexport type LogMessage = {\n  id: number;\n  topic: string;\n  level: LogLevelLabel;\n  date: string;\n  message: string;\n};\n\n/**\n * An object representing a list of log entries.\n */\nexport type LogEntries = {\n  totalAmount: number;\n  lid: number[];\n  topic: string[];\n  level: LogLevel[];\n  timestamp: number[];\n  text: string[];\n};\n//#endregion\n"]}